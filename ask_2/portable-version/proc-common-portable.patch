6d5
< #include <sys/prctl.h>
9a9,34
> #ifdef linux
> #include <sys/prctl.h>
> void
> change_pname(const char *new_name)
> {
> 	int ret;
> 	ret = prctl(PR_SET_NAME, new_name);
> 	if (ret == -1){
> 		perror("prctl set_name");
> 		exit(1);
> 	}
> }
> #else   //assuming BSD
> static char *proc_name;
> void set_proc_name(char *pn)
> {
>     proc_name=pn;
> }
> void
> change_pname(const char *new_name)
> {
>     free(proc_name);
>     proc_name=(char *) malloc(strlen(new_name)*sizeof(char));
>     sprintf(proc_name,"%s",new_name);
> }
> #endif
23,32d47
< void
< change_pname(const char *new_name)
< {
< 	int ret;
< 	ret = prctl(PR_SET_NAME, new_name);
< 	if (ret == -1){
< 		perror("prctl set_name");
< 		exit(1);
< 	}
< }
101a117
> #ifdef linux
102a119,121
> #else //assuming bsd
> 	snprintf(cmd, sizeof(cmd), "echo; echo; pstree -g -c -p %ld; echo; echo",
> #endif
